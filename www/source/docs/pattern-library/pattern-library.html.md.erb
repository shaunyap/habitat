---
title: Pattern Library Introduction
description: Example code for Chef Habitat plans and more!
---

## <a name="hab-patterns" id="hab-patterns" type="anchor">Chef Habitat Pattern Library</a>

The Chef Habitat Pattern Library is an evolving set of design patterns to use as starting-points. These patterns are examples and require configuration and customization for your unique situation.

For help with Chef Habitat and these patterns, ask:

- Your customer support agent
- In the [Chef Habitat Forum](https://forums.habitat.sh/)
- In the [Chef Habitat Slack](http://slack.habitat.sh/)

---
## <a name="kub-bastion" id="kub-bastion" data-magellan-target="kub-bastion" type="anchor">Kubernetes Bastion Ring Pattern</a>

A _bastion ring_ is a robust type of Supervisor network in which a small number of Supervisors are set up as permanent peers and that are dedicated to anchoring Supervisor network communication. These Supervisors are designated solely for communication between Supervisor and _do not run services_. These solely to anchor the entire Supervisor network. See [Robust Supervisor Networks](/docs/best-practices/robust-supervisor-networks/) for more information. The following examples demonstrate running a bastion ring in Kubernetes.

### <a name="hab-plan-sh" id="hab-plan-sh" data-magellan-target="hab-plan-sh" type="anchor">Kubernetes Bastion Ring Plan</a>

```bash
  pkg_name=hab_bastion
pkg_origin=habitat
pkg_version="0.1.0"
pkg_maintainer="irvingpop"
pkg_license=("Apache-2.0")
pkg_deps=(core/busybox-static)
pkg_svc_run="while true; do sleep 60; done"

do_build() {
  return 0
}

do_install() {
  return 0
}

```

---
### <a name="hab-bastion" id="hab-bastion" data-magellan-target="hab-bastion" type="anchor">Kubernetes Bastion Ring Producer Pattern</a>


```yaml
  ---
apiVersion: v1
kind: Service
metadata:
  name: hab-bastion
spec:
  ports:
  - name: gossip-listener
    protocol: UDP
    port: 9638
    targetPort: 9638
  - name: http-gateway
    protocol: TCP
    port: 9631
    targetPort: 9631
  selector:
    app: hab-bastion
  clusterIP: None

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hab-bastion
spec:
  selector:
    matchLabels:
      app: hab-bastion
  serviceName: hab-bastion
  replicas: 1
  template:
    metadata:
      labels:
        app: hab-bastion
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 42
      containers:
      - name: hab-bastion
        image: irvingpop/hab_bastion:latest
        args:
        - '--permanent-peer'
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m" # equivalent to 0.1 of a CPU core
        ports:
        - name: gossip-listener
          protocol: UDP
          containerPort: 9638
        - name: http-gateway
          protocol: TCP
          containerPort: 9631
        readinessProbe:
          httpGet:
            path: /
            port: 9631
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 9631
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: hab-bastion
          mountPath: /hab/sup
  volumeClaimTemplates:
  - metadata:
      name: hab-bastion
    spec:
      accessModes: [ "ReadWriteOnce" ]
      # uncomment if you don't have a default storageclass
      # storageClassName: "standard"
      resources:
        requests:
          storage: 10Gi
```

### <a name="hab-bastion-consumer" id="hab-bastion-consumer" data-magellan-target="hab-bastion-consumer" type="anchor">Kubernetes Bastion Ring Consumer Pattern</a>

<%# NEED EXPLANATION %>

```yaml

  apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cockroachdb
spec:
  selector:
    matchLabels:
      app: cockroachdb
  serviceName: cockroachdb
  replicas: 3
  template:
    metadata:
      labels:
        app: cockroachdb
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 42
      containers:
      - name: cockroachdb
        image: irvingpop/cockroach:latest
        args:
        - --peer
        - hab-bastion
        - --topology
        - leader
#        env:
#        - name: HAB_COCKROACH
#          value: |
        resources:
          requests:
            memory: "300Mi"
            cpu: "500m" # equivalent to 0.5 CPU core
        ports:
        - name: http
          containerPort: 8080
        - name: cockroachdb
          containerPort: 26257
        volumeMounts:
        - name: cockroachdb-data
          mountPath: /hab/svc/cockroach/data
  volumeClaimTemplates:
  - metadata:
      name: cockroachdb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
```
